name: Terraform Infrastructure Deployment
on:
  workflow_dispatch:

jobs:
  terraform-ci:
    name: Terraform CI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: az-login
        name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: hashicorp/setup-terraform@v3
        name: Terraform setup

      - id: plan
        name: Terraform Plan
        working-directory: infra/azure/terraform
        env:
          ARM_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
        run: |
          terraform init
          terraform validate
          terraform plan -no-color -out tf.plan

      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tf.plan
          path: infra/azure/terraform/tf.plan

  terraform-apply:
    needs: terraform-ci
    runs-on: ubuntu-latest
    name: Terraform apply
    environment: tf-deploy
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: hashicorp/setup-terraform@v3
        name: Terraform setup

      - name: Download plan artifact
        uses: actions/download-artifact@v4
        with:
          name: tf.plan
          path: infra/azure/terraform

      - id: apply
        name: Terraform Apply
        working-directory: infra/azure/terraform
        env:
          ARM_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
        run: |
          terraform init
          terraform apply --auto-approve tf.plan

      - name: Read Terraform outputs (rg_name, aks_name)
        working-directory: infra/azure/terraform
        id: tf-outs
        run: |
          echo "RG_NAME=$(terraform output -raw rg_name)" >> $GITHUB_OUTPUT
          echo "AKS_NAME=$(terraform output -raw aks_name)" >> $GITHUB_OUTPUT

      - name: Get AKS credentials
        run: |
          az aks get-credentials \
            --resource-group "${{ steps.tf-outs.outputs.RG_NAME }}" \
            --name "${{ steps.tf-outs.outputs.AKS_NAME }}" \
            --overwrite-existing

      - name: Deploy Ray Service
        run: |
          kubectl apply -f infra/k8s/rayservice.yml
